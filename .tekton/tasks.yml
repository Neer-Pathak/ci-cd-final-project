# ------------------ CLEANUP TASK ------------------
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup
spec:
  workspaces:
    - name: source
  steps:
    - name: cleanup
      image: alpine
      script: |
        #!/bin/sh
        echo "Cleaning workspace..."
        rm -rf $(workspaces.source.path)/*

---
# ------------------ FLAKE8 LINT TASK ------------------
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: flake8-lint
spec:
  workspaces:
    - name: source
  steps:
    - name: lint
      image: python:3.9-slim
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        pip install flake8
        flake8 service --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 service --count --max-complexity=10 --max-line-length=127 --statistics

---
# ------------------ NOSE TEST TASK ------------------
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: nose
spec:
  workspaces:
    - name: source
  steps:
    - name: test
      image: python:3.9-slim
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e
        pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        pip install nose
        nosetests -v || echo "Tests failed, but continuing..."

---
# ------------------ BUILD TASK (BUILDAH) ------------------
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah
spec:
  params:
    - name: IMAGE
  workspaces:
    - name: source
  steps:
    - name: build
      image: quay.io/buildah/stable
      securityContext:
        privileged: true
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        buildah bud -t $(params.IMAGE) .
        buildah push $(params.IMAGE)

---
# ------------------ OPENSHIFT DEPLOY TASK ------------------
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: openshift-deploy
spec:
  params:
    - name: app-name
    - name: build-image
  steps:
    - name: deploy
      image: quay.io/openshift/origin-cli:latest
      script: |
        #!/bin/bash
        oc create deployment $(params.app-name) \
          --image=$(params.build-image) \
          --dry-run=client -o yaml | oc apply -f -
